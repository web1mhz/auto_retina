이번 강좌는 labelimg 프로그램으로 학습자료 만들기 과정을 설명합니다.
이번에는 가장 단순한 방법을 사용한다. 

1. 가상환경 접속

conda 프롬프트를 관리자권한으로 실행
conda activate auto_retina


2. labelimg 프로그램 실행

- Windows + Anaconda 경우는 단순히 글로 설명한다.

cd c:\
git clone https://github.com/tzutalin/labelImg.git

conda 프롬프트를 관리자권한으로 실행
conda activate auto_retina 으로 가상환경 활성화

conda install pyqt=5
conda install -c anaconda lxml

cd c:\labelimg 폴더로 이동
pyrcc5 -o libs/resources.py resources.qrc

python labelImg.py 실행
python labelImg.py [IMAGE_PATH] [PRE-DEFINED CLASS FILE]


오토세이브 모드에서 오류가 자주 나오면 가장 단순한 방법을 이용하세요.
File "labelImg.py", line 1114, in showBoundingBoxFromAnnotationFile
    filedir = filePath.split(basename)[0].split("/")[-2:-1][0]
IndexError: list index out of range


- 가장 단순한 방법
pip install labelImg
labelImg
labelImg [IMAGE_PATH] [PRE-DEFINED CLASS FILE]


- 이상으로 마치겠습니다.












# CONVERTIR XML A CSV

import os
import glob
import pandas as pd
import xml.etree.ElementTree as ET


def xml_to_csv(path):
    xml_list = []
    for xml_file in glob.glob(path + '/*.xml'):
        tree = ET.parse(xml_file)
        root = tree.getroot()

        for member in root.findall('object'):
            value = ('images/'+root.find('filename').text,
                     int(member[4][0].text),
                     int(member[4][1].text),
                     int(member[4][2].text),
                     int(member[4][3].text),
                     member[0].text,
                     )
            xml_list.append(value)
    column_name = ['filename', 'xmin','ymin','xmax', 'ymax', 'class']
    xml_df = pd.DataFrame(xml_list, columns=column_name)
    return xml_df


image_path = os.path.join(os.getcwd(), 'images/')
dataset_df = xml_to_csv(image_path)


print('Completed')

# MOSTRAR DATASET 
import skimage.io as io
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
import matplotlib.patches as patches

%matplotlib inline

def showObjects(image_df):

    img_path = image_df.filename

    image = io.imread(img_path)
    draw = image.copy()
    
    # Create figure and axes
    fig,ax = plt.subplots(1)
    ax.imshow(draw)
    rect = patches.Rectangle((image_df.xmin,image_df.ymin),image_df.xmax-image_df.xmin,image_df.ymax-image_df.ymin,linewidth=1,edgecolor='r',facecolor='none')

    plt.axis('off')
    ax.add_patch(rect)
    plt.show()

   showObjects(dataset_df.iloc[2])
   
   
# DIVIDIR DATASET
train_df, test_df = train_test_split(
  dataset_df, 
  test_size=0.2, 
  random_state=2
)

# CREAR ARCHIVOS CSV
train_df.to_csv('annotations.csv', index=False, header=None)
test_df.to_csv('annotations_test.csv', index=False, header=None)

classes = set(['hand'])

with open('classes.csv', 'w') as f:
    for i, line in enumerate(sorted(classes)):
        f.write('{},{}\n'.format(line,i))